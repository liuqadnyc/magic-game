{"version":3,"sources":["components/Card.jsx","App.jsx","index.js"],"names":["Container","styled","div","Card","card","flipped","handleChoice","className","src","alt","onClick","cardImages","App","useState","cards","setCards","matchedIds","setMatchedIds","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","shuffleCards","shuffledCards","sort","Math","random","map","id","useEffect","ids","nextTurn","setTimeout","t","console","log","length","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAGMA,EAAYC,IAAOC,IAAV,kgBA2BFC,EAAO,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,aAEnC,OACE,cAACN,EAAD,CAAWO,UAAU,OAArB,SACE,sBAAKA,UAAWF,EAAU,UAAY,GAAtC,UACE,qBAAKE,UAAU,QAAQC,IAAKJ,EAAKI,IAAKC,IAAI,eAC1C,qBACEF,UAAU,OACVC,IAAI,gBACJC,IAAI,YACJC,QAAS,kBAAMJ,EAAaF,YCpChCO,EAAa,CACjB,CAAEH,IAAK,qBACP,CAAEA,IAAK,qBACP,CAAEA,IAAK,mBACP,CAAEA,IAAK,qBACP,CAAEA,IAAK,qBACP,CAAEA,IAAK,qBAkFMI,MA/Ef,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA0BJ,mBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAkCN,mBAAS,MAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAkCR,mBAAS,MAA3C,mBAAOS,EAAP,KAAkBC,EAAlB,KAEMC,EAAgB,WACpB,IAAMC,EAAgB,UAAKd,EAAeA,GACvCe,MAAK,kBAAMC,KAAKC,SAAW,MAC3BC,KAAI,SAACzB,GAAD,mBAAC,eAAeA,GAAhB,IAAsB0B,GAAIH,KAAKC,cAEtCb,EAASU,GACTJ,EAAa,MACbE,EAAa,MACbN,EAAc,IACdE,EAAS,IAGXY,qBAAU,WACRP,MACC,IAEHO,qBAAU,WACJX,GAAaE,IACXF,EAAUZ,MAAQc,EAAUd,KAC9BS,GAAc,SAAAe,GAAG,4BAAUA,GAAV,CAAeZ,EAAUU,GAAIR,EAAUQ,QACxDG,KAEAC,WAAWD,EAAU,QAGxB,CAACb,EAAWE,IAGf,IAAMhB,EAAe,SAACF,GAChBgB,EACGE,GACHC,EAAanB,GAGfiB,EAAajB,IAIX6B,EAAW,WACfd,GAAS,SAAAgB,GAAC,OAAIA,EAAI,KAClBd,EAAa,MACbE,EAAa,OAOf,OAJAa,QAAQC,IAAIjB,EAAW,aACvBgB,QAAQC,IAAInB,EAAO,SACnBkB,QAAQC,IAAIrB,EAAY,cAGtB,sBAAKT,UAAU,MAAf,UACE,6CACA,wBAAQG,QAAS,kBAAMc,KAAvB,sBACER,EAAWsB,SAAWxB,EAAMwB,QAC5B,qBAAK/B,UAAU,YAAf,SACIO,EAAMe,KAAI,SAAAzB,GAAI,OACd,cAAC,EAAD,CAEEA,KAAMA,EACNC,QAASD,IAASgB,GAAahB,IAASkB,GAAaN,EAAWuB,SAASnC,EAAK0B,IAC9ExB,aAAcA,GAHTF,EAAK0B,SAQhBd,EAAWsB,SAAWxB,EAAMwB,QAC5B,4EAEF,wCAAWpB,SClFjBsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.63959efd.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  position: relative;\n  img {\n    width: 100%;\n    display: block;\n    border: 2px solid #fff;\n    border-radius: 6px;\n  }\n  .front {\n    position: absolute;\n    transform: rotateY(90deg);\n    transition: all ease-in 0.2s;\n  }\n  .flipped .front {\n    transform: rotateY(0);\n    transition-delay: 0.2s;\n  }\n  .back {\n    transition: all ease-in 0.2s;\n    transition-delay: 0.2s;\n  }\n  .flipped .back {\n    transform: rotateY(90deg);\n    transition-delay: 0s;\n  }\n`\n\nexport const Card = ({card, flipped, handleChoice}) => {\n\n  return (\n    <Container className='card'>\n      <div className={flipped ? \"flipped\" : \"\"}>\n        <img className='front' src={card.src} alt='card front' />\n        <img\n          className='back'\n          src='img/cover.png'\n          alt='card back'\n          onClick={() => handleChoice(card)}\n        />\n      </div>\n    </Container>\n  )\n}\n","import './App.css'\nimport React, { useEffect, useState } from 'react'\nimport { Card } from './components/Card';\n\nconst cardImages = [\n  { src: \"/img/helmet-1.png\" },\n  { src: \"/img/potion-1.png\" },\n  { src: \"/img/ring-1.png\" },\n  { src: \"/img/scroll-1.png\" },\n  { src: \"/img/shield-1.png\" },\n  { src: \"/img/sword-1.png\" },\n];\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [matchedIds, setMatchedIds] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n\n  const shuffleCards =  () => {\n    const shuffledCards = [ ...cardImages, ...cardImages ]\n      .sort(() => Math.random() - 0.5)\n      .map((card) => ({ ...card, id: Math.random() }));\n\n    setCards(shuffledCards);\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setMatchedIds([]);\n    setTurns(0);\n  }\n\n  useEffect(() => {\n    shuffleCards();\n  }, [])\n\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      if (choiceOne.src === choiceTwo.src) {\n        setMatchedIds(ids => ([ ...ids, choiceOne.id, choiceTwo.id ]));\n        nextTurn();\n      } else {\n        setTimeout(nextTurn, 1000);\n      }\n    }\n  }, [choiceOne, choiceTwo])\n\n\n  const handleChoice = (card) => {\n    if (choiceOne) {\n      if (!choiceTwo) {\n        setChoiceTwo(card);\n      }\n    } else {\n      setChoiceOne(card);\n    }\n  }\n\n  const nextTurn = () => {\n    setTurns(t => t + 1);\n    setChoiceOne(null);\n    setChoiceTwo(null);\n  }\n\n  console.log(choiceOne, 'choiceOne')\n  console.log(turns, 'turns')\n  console.log(matchedIds, 'matchedIds')\n\n  return (\n    <div className=\"App\">\n      <h1>Magic Match</h1>\n      <button onClick={() => shuffleCards()}>New Game</button>\n      { matchedIds.length !== cards.length &&\n        <div className='card-grid'>\n          { cards.map(card => (\n            <Card\n              key={card.id}\n              card={card}\n              flipped={card === choiceOne || card === choiceTwo || matchedIds.includes(card.id)}\n              handleChoice={handleChoice}\n            />\n          ))}\n        </div>\n      }\n      { matchedIds.length === cards.length &&\n        <p>恭喜你R～陳芷涵</p>\n      }\n      <p>Turns: {turns}</p>\n    </div>\n  );\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}